-- Eliminar PAGO si existe
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE PAGO CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- Eliminar SALA si existe
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE SALA CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- Eliminar PELICULAS si existe
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE PELICULAS CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- Eliminar USUARIO si existe
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE USUARIO CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- Tabla: USUARIO
CREATE TABLE USUARIO (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    APELLIDO VARCHAR2(50) NOT NULL,
    CORREO VARCHAR2(100) UNIQUE NOT NULL
);

-- Tabla: PELICULAS
CREATE TABLE PELICULAS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL
);

-- Tabla: SALA
CREATE TABLE SALA (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CINE VARCHAR2(100) NOT NULL,
    HORA_FUNCION DATE NOT NULL,
    PELICULA_ID NUMBER NOT NULL,
    CONSTRAINT FK_SALA_PELICULA FOREIGN KEY (PELICULA_ID) REFERENCES PELICULAS(ID)
);

-- Tabla: PAGO
CREATE TABLE PAGO (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NUMERO_PAGO VARCHAR2(50) UNIQUE NOT NULL,
    METODO_PAGO VARCHAR2(50) NOT NULL,
    FECHA_PAGO DATE NOT NULL,
    VALOR_PAGO NUMBER(10, 2) NOT NULL,
    USUARIO_ID NUMBER NOT NULL,
    SALA_ID NUMBER NOT NULL,
    CONSTRAINT FK_PAGO_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID),
    CONSTRAINT FK_PAGO_SALA FOREIGN KEY (SALA_ID) REFERENCES SALA(ID)
);

-- Usuarios
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Laura', 'Gómez', 'laura@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Carlos', 'Ruiz', 'carlos@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('María', 'Fernández', 'maria.fernandez@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Jorge', 'Ramírez', 'jorge.ramirez@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Ana', 'Martínez', 'ana.martinez@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Luis', 'Torres', 'luis.torres@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Camila', 'Rojas', 'camila.rojas@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Pedro', 'Moreno', 'pedro.moreno@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Isabel', 'Pérez', 'isabel.perez@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Sofía', 'Gutiérrez', 'sofia.gutierrez@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Tomás', 'Díaz', 'tomas.diaz@example.com');
INSERT INTO USUARIO (NOMBRE, APELLIDO, CORREO) VALUES ('Daniela', 'Muñoz', 'daniela.munoz@example.com');


-- Películas
INSERT INTO PELICULAS (NOMBRE) VALUES ('Matrix');
INSERT INTO PELICULAS (NOMBRE) VALUES ('Titanic');

-- Salas
INSERT INTO SALA (CINE, HORA_FUNCION, PELICULA_ID) VALUES ('CineColombia', TO_DATE('2025-05-20 18:00', 'YYYY-MM-DD HH24:MI'), 1);
INSERT INTO SALA (CINE, HORA_FUNCION, PELICULA_ID) VALUES ('Royal Films', TO_DATE('2025-05-21 20:30', 'YYYY-MM-DD HH24:MI'), 2);

-- Pagos
INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG001', 'Tarjeta Crédito', SYSDATE, 25000, 1, 1);

INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG002', 'Nequi', SYSDATE, 30000, 2, 2);

INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG003', 'Tarjeta Débito', TO_DATE('2025-05-15', 'YYYY-MM-DD'), 28000, 3, 1);

INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG004', 'PSE', TO_DATE('2025-05-15', 'YYYY-MM-DD'), 35000, 4, 2);

INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG005', 'Efectivo', TO_DATE('2025-05-14', 'YYYY-MM-DD'), 22000, 5, 1);

INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG006', 'Nequi', TO_DATE('2025-05-13', 'YYYY-MM-DD'), 27000, 6, 2);

INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG007', 'Daviplata', TO_DATE('2025-05-13', 'YYYY-MM-DD'), 26000, 7, 1);

INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG008', 'Tarjeta Crédito', TO_DATE('2025-05-12', 'YYYY-MM-DD'), 30000, 8, 2);

INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG009', 'PSE', TO_DATE('2025-05-12', 'YYYY-MM-DD'), 31000, 9, 1);

INSERT INTO PAGO (NUMERO_PAGO, METODO_PAGO, FECHA_PAGO, VALOR_PAGO, USUARIO_ID, SALA_ID)
VALUES ('PAG010', 'Nequi', TO_DATE('2025-05-11', 'YYYY-MM-DD'), 29000, 10, 2);

--DAR PERMISOS AL USUARIO
CREATE USER C##LAURA IDENTIFIED BY 1234;

GRANT CONNECT, RESOURCE TO C##LAURA;

GRANT SELECT, UPDATE, INSERT, DELETE ON USUARIO TO C##LAURA;
GRANT SELECT, UPDATE, INSERT, DELETE ON PELICULAS TO C##LAURA;
GRANT SELECT, UPDATE, INSERT, DELETE ON SALA TO C##LAURA;
GRANT SELECT, UPDATE, INSERT, DELETE ON PAGO TO C##LAURA;

--ACTUALIZAR UN MAIL PARA EL EJERCICIO
UPDATE SYSTEM.USUARIO SET correo = 'leonjuandavid@hotmail.com', nombre = 'Juan David', apellido = 'Leon Barrera' WHERE id = 2;

SELECT 
    u.ID AS USUARIO_ID,
    u.NOMBRE || ' ' || u.APELLIDO AS NOMBRE_COMPLETO,
    u.CORREO,
    p.NUMERO_PAGO,
    p.METODO_PAGO,
    TO_CHAR(p.FECHA_PAGO, 'DD-MM-YYYY HH24:MI') AS FECHA_PAGO,
    p.VALOR_PAGO,
    s.CINE,
    s.id AS SALA,
    pe.nombre AS PELICULA, 
    TO_CHAR(s.HORA_FUNCION, 'DD-MM-YYYY HH24:MI') AS HORA_FUNCION
FROM 
    SYSTEM.PAGO p 
    INNER JOIN SYSTEM.USUARIO u ON p.USUARIO_ID = u.ID
    INNER JOIN SYSTEM.SALA s ON p.SALA_ID = s.ID
    INNER JOIN SYSTEM.Peliculas pe ON pe.id = s.pelicula_id
--WHERE u.CORREO = 'leonjuandavid@hotmail.com'
ORDER BY 
    p.FECHA_PAGO DESC;